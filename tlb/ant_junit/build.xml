<project xmlns:ivy="antlib:org.apache.ivy.ant" name="ant_junit" basedir="." default="all">

    <property name="src.dir" location="src"/>
    <property name="test.dir" location="test"/>
    <property name="lib.dir" location="lib"/>
    <property name="test.lib.dir" location="lib"/>
    <property name="target.dir" location="target"/>
    <property name="classes.dir" location="${target.dir}/classes"/>
    <property name="test-classes.dir" location="${target.dir}/test-classes"/>
    <property name="reports.dir" location="${target.dir}/reports"/>

    <property name="tlb.project.dir" location="${basedir}/../../tlb"/><!-- used in dev box -->
    <property name="tlb.dist.dir" location="${basedir}/../../java"/><!-- used in packaged distribution(s) -->

    <target name="init">
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${test-classes.dir}"/>
        <mkdir dir="${reports.dir}"/>
    </target>

    <path id="src.classpath">
        <pathelement path="${classes.dir}"/>
    </path>

    <path id="test.classpath">
        <path refid="src.classpath"/>
        <pathelement path="${test-classes.dir}"/>
        <fileset dir="${test.lib.dir}" includes="*.jar"/>
    </path>

    <path id="load.balanced.classpath">
        <path refid="test.classpath"/>
        <fileset dir="${tlb.project.dir}/java/lib" includes="*.jar" erroronmissingdir="false"/>
        <fileset dir="${tlb.project.dir}/target" includes="tlb-java*.jar" erroronmissingdir="false"/>
        <fileset dir="${tlb.dist.dir}/lib" includes="*.jar" erroronmissingdir="false"/>
        <fileset dir="${tlb.dist.dir}" includes="tlb-java*.jar" erroronmissingdir="false"/>
    </path>

    <target name="clean">
        <delete dir="${target.dir}" includeemptydirs="true"/>
    </target>

    <target name="compile" depends="init">
        <javac destdir="${classes.dir}" target="1.5" source="1.5" debug="true" includeantruntime="false">
            <classpath refid="src.classpath"/>
            <src path="${src.dir}"/>
        </javac>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}" includes="log4j.properties"/>
        </copy>
    </target>

    <target name="compile-tests" depends="compile">
        <javac destdir="${test-classes.dir}" target="1.5" source="1.5" includeantruntime="false">
            <classpath refid="test.classpath"/>
            <src path="${test.dir}"/>
        </javac>
    </target>

    <target name="test" depends="compile, compile-tests">
        <junit failureproperty="test.failure" printsummary="yes" haltonfailure="true" fork="true">
            <classpath refid="test.classpath"/>
            <batchtest todir="${reports.dir}">
                <fileset dir="${test-classes.dir}" includes="**/*Test.class*"/>
            </batchtest>
        </junit>
    </target>

    <!--TLB-DOC-START@junit-ant-task@ -->
    <!-- Change the 'load.balanced.classpath' so that it is your test classpath along with the TLB jar and
    its dependencies. You can also tweak the 'depends' to fix the task dependencies of your build.
     You can change the fileset's includes pattern to include your tests. -->
    <target name="test.balanced" depends="compile, compile-tests">
        <typedef name="load-balanced-fileset" classname="tlb.ant.LoadBalancedFileSet" classpathref="load.balanced.classpath"/>
        <junit failureproperty="test.failure" printsummary="yes" haltonfailure="true" haltonerror="true"
               showoutput="true" fork="true">
            <classpath refid="load.balanced.classpath"/>
            <batchtest todir="${reports.dir}">
                <load-balanced-fileset dir="${test-classes.dir}" includes="**/*Test.class"/>
                <!-- uncomment and use the load-balanced-file-set configuration below(comment out the one above) if you have a multi-module setup and this is test invocation for one of the modules -->
                <!--load-balanced-fileset dir="${test-classes.dir}" includes="**/*Test.class" moduleName="my-ant-module"/-->
                <formatter classname="tlb.ant.JunitDataRecorder"/>
                <formatter type="plain"/>
            </batchtest>
        </junit>
    </target>

    <!-- the following target is not required unless you intend to enable correctness check-->
    <target name="assert.all.partitions.executed">
        <typedef name="check-missing-partitions" classname="tlb.ant.CheckMissingPartitions" classpathref="load.balanced.classpath"/>
        <check-missing-partitions/>
        <!-- uncomment and use the check-missing-partition task invocation below(comment out the one above) if you have a multi-module setup and want to verify completeness of all partitions across all/some modules in one shot -->
        <!--check-missing-partitions moduleNames="my-ant-module,my-other-ant-module"/-->
    </target>
    <!--TLB-DOC-END@junit-ant-task@ -->

    <target name="all" depends="clean, test"/>
</project>
